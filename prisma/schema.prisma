generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id       String @id @default(cuid())
  userId   String @unique
  name     String
  imageUrl String @db.Text
  email    String @db.Text

  servers Server[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Member    Member[]
  Channel   Channel[]
}

model Server {
  id         String @id @default(cuid())
  name       String
  imageUrl   String @db.Text
  inviteCode String @db.Text

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  members Member[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  channels  Channel[]
}

enum MemberRole {
  ADMIN
  MEMBER
  GUEST
}

model Member {
  id   String     @id @default(cuid())
  role MemberRole

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade) // Cambiado a `id`

  serverId String
  server   Server @relation(fields: [serverId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ChannelType {
  TEXT
  VOICE
}

model Channel {
  id   String      @id @default(cuid())
  name String
  type ChannelType @default(TEXT)

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade) // Cambiado a `id`

  serverId String
  server   Server @relation(fields: [serverId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
